{
    "library": {
        "annotation": [
            {
                "translatorVersion": "2.11.0",
                "translatorOptions": "",
                "type": "CqlToElmInfo"
            },
            {
                "libraryId": "SyntaxErrorReferencingLibrary",
                "startLine": 5,
                "startChar": 23,
                "endLine": 5,
                "endChar": 23,
                "message": "Syntax error at syntax",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "SyntaxErrorReferencingLibrary",
                "startLine": 3,
                "startChar": 1,
                "endLine": 3,
                "endChar": 30,
                "message": "Could not load source for library SyntaxErrorWithLibrary, version null.",
                "errorType": "include",
                "errorSeverity": "error",
                "targetIncludeLibraryId": "SyntaxErrorWithLibrary",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "SyntaxErrorReferencingLibrary",
                "startLine": 5,
                "startChar": 14,
                "endLine": 5,
                "endChar": 17,
                "message": "Could not resolve identifier this in the current library.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            }
        ],
        "identifier": {
            "id": "SyntaxErrorReferencingLibrary"
        },
        "schemaIdentifier": {
            "id": "urn:hl7-org:elm",
            "version": "r1"
        },
        "usings": {
            "def": [
                {
                    "localIdentifier": "System",
                    "uri": "urn:hl7-org:elm-types:r1"
                }
            ]
        },
        "includes": {
            "def": [
                {
                    "localIdentifier": "SyntaxErrorWithLibrary",
                    "path": "SyntaxErrorWithLibrary"
                }
            ]
        },
        "statements": {
            "def": [
                {
                    "name": "Test",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                }
            ]
        }
    }
}