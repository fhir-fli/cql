{
    "library": {
        "annotation": [
            {
                "translatorVersion": "2.11.0",
                "translatorOptions": "",
                "type": "CqlToElmInfo"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 21,
                "startChar": 28,
                "endLine": 21,
                "endChar": 28,
                "message": "Syntax error at \"\"",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 21,
                "startChar": 56,
                "endLine": 21,
                "endChar": 56,
                "message": "Syntax error at ''",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 21,
                "startChar": 58,
                "endLine": 21,
                "endChar": 58,
                "message": "Syntax error",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 23,
                "startChar": 58,
                "endLine": 23,
                "endChar": 58,
                "message": "Syntax error",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 26,
                "startChar": 23,
                "endLine": 26,
                "endChar": 23,
                "message": "Syntax error at matches",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 38,
                "startChar": 25,
                "endLine": 38,
                "endChar": 25,
                "message": "Syntax error at =",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 43,
                "startChar": 22,
                "endLine": 43,
                "endChar": 22,
                "message": "Syntax error at =",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "librarySystem": "/tmp/rep9507020997508530941tmp",
                "libraryId": "rep9507020997508530941tmp",
                "startLine": 44,
                "startChar": 5,
                "endLine": 44,
                "endChar": 5,
                "message": "Syntax error at where",
                "errorType": "syntax",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 9,
                "startChar": 3,
                "endLine": 9,
                "endChar": 60,
                "message": "Could not resolve type name Risk Assessment, Performed.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 31,
                "startChar": 41,
                "endLine": 31,
                "endChar": 53,
                "message": "Could not resolve identifier $List Value in the current library.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 33,
                "startChar": 41,
                "endLine": 33,
                "endChar": 53,
                "message": "Could not resolve identifier $List Value in the current library.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 37,
                "startChar": 2,
                "endLine": 37,
                "endChar": 38,
                "message": "Could not resolve type name Encounter, Performed.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 38,
                "startChar": 6,
                "endLine": 39,
                "endChar": 30,
                "message": "Internal translator error.",
                "errorType": "internal",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 41,
                "startChar": 1,
                "endLine": 43,
                "endChar": 92,
                "message": "Identifier $Inpatient Encounters is already in use in this library.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "startLine": 56,
                "startChar": 3,
                "endLine": 56,
                "endChar": 46,
                "message": "Could not resolve type name Laboratory Test, Performed.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            }
        ],
        "identifier": {},
        "schemaIdentifier": {
            "id": "urn:hl7-org:elm",
            "version": "r1"
        },
        "usings": {
            "def": [
                {
                    "localIdentifier": "System",
                    "uri": "urn:hl7-org:elm-types:r1"
                }
            ]
        },
        "codeSystems": {
            "def": [
                {
                    "name": "SNOMED-CT",
                    "id": "2.16.840.1.113883.6.96",
                    "version": "2016A",
                    "accessLevel": "Public"
                }
            ]
        },
        "statements": {
            "def": [
                {
                    "name": "$Breastfeeding Intention",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "code": "123456789",
                        "display": "Breastfeeding intention",
                        "type": "Code",
                        "system": {
                            "name": "SNOMED-CT"
                        }
                    }
                },
                {
                    "name": "$Has Breastfeeding Assessment",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Query",
                        "source": [
                            {
                                "alias": "R",
                                "expression": {
                                    "type": "Null"
                                }
                            }
                        ],
                        "relationship": [],
                        "where": {
                            "type": "Null"
                        }
                    }
                },
                {
                    "name": "$Flatten",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Flatten",
                        "operand": {
                            "type": "List",
                            "element": [
                                {
                                    "type": "List",
                                    "element": [
                                        {
                                            "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                            "value": "1",
                                            "type": "Literal"
                                        },
                                        {
                                            "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                            "value": "2",
                                            "type": "Literal"
                                        },
                                        {
                                            "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                            "value": "3",
                                            "type": "Literal"
                                        }
                                    ]
                                },
                                {
                                    "type": "List",
                                    "element": [
                                        {
                                            "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                            "value": "4",
                                            "type": "Literal"
                                        },
                                        {
                                            "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                            "value": "5",
                                            "type": "Literal"
                                        },
                                        {
                                            "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                            "value": "6",
                                            "type": "Literal"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "$Identifier with a ",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "valueType": "{urn:hl7-org:elm-types:r1}String",
                        "value": "String literal with a ",
                        "type": "Literal"
                    }
                },
                {
                    "name": "$Identifier with a \"",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "valueType": "{urn:hl7-org:elm-types:r1}String",
                        "value": "String literal with a '",
                        "type": "Literal"
                    }
                },
                {
                    "name": "$Matches",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                        "value": "100",
                        "type": "Literal"
                    }
                },
                {
                    "name": "$Equivalent",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Equivalent",
                        "operand": [
                            {
                                "type": "ToDecimal",
                                "operand": {
                                    "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                    "value": "100",
                                    "type": "Literal"
                                }
                            },
                            {
                                "valueType": "{urn:hl7-org:elm-types:r1}Decimal",
                                "value": "100.0",
                                "type": "Literal"
                            }
                        ]
                    }
                },
                {
                    "name": "$Indexer Expression (1-based)",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "$Indexer Expression (0-based)",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "$Inpatient Encounters",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Query",
                        "source": [
                            {
                                "alias": "E",
                                "expression": {
                                    "type": "Null"
                                }
                            }
                        ],
                        "relationship": []
                    }
                },
                {
                    "name": "$CD4+ Count With Results and Medications",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                }
            ]
        }
    }
}