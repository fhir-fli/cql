{
    "library": {
        "annotation": [
            {
                "translatorVersion": "2.11.0",
                "translatorOptions": "",
                "type": "CqlToElmInfo"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 12,
                "startChar": 48,
                "endLine": 12,
                "endChar": 71,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 12,
                "startChar": 1,
                "endLine": 12,
                "endChar": 71,
                "message": "Could not determine parameter type for parameter Invalid Retrieve Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 23,
                "startChar": 1,
                "endLine": 23,
                "endChar": 42,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 13,
                "startChar": 50,
                "endLine": 13,
                "endChar": 66,
                "message": "Could not resolve identifier Test Definition in the current library.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 13,
                "startChar": 1,
                "endLine": 13,
                "endChar": 66,
                "message": "Could not determine parameter type for parameter Invalid Expression Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 14,
                "startChar": 48,
                "endLine": 14,
                "endChar": 65,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 14,
                "startChar": 1,
                "endLine": 14,
                "endChar": 65,
                "message": "Could not determine parameter type for parameter Invalid Function Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 15,
                "startChar": 50,
                "endLine": 15,
                "endChar": 67,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 15,
                "startChar": 1,
                "endLine": 15,
                "endChar": 67,
                "message": "Could not determine parameter type for parameter Invalid CodeSystem Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 16,
                "startChar": 48,
                "endLine": 16,
                "endChar": 63,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 16,
                "startChar": 1,
                "endLine": 16,
                "endChar": 63,
                "message": "Could not determine parameter type for parameter Invalid ValueSet Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 17,
                "startChar": 44,
                "endLine": 17,
                "endChar": 54,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 17,
                "startChar": 1,
                "endLine": 17,
                "endChar": 54,
                "message": "Could not determine parameter type for parameter Invalid Code Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 18,
                "startChar": 47,
                "endLine": 18,
                "endChar": 60,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 18,
                "startChar": 1,
                "endLine": 18,
                "endChar": 60,
                "message": "Could not determine parameter type for parameter Invalid Concept Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 19,
                "startChar": 49,
                "endLine": 19,
                "endChar": 64,
                "message": "Expressions in this context must be able to be evaluated at compile-time.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "ParameterTestInvalid",
                "startLine": 19,
                "startChar": 1,
                "endLine": 19,
                "endChar": 64,
                "message": "Could not determine parameter type for parameter Invalid Reference Parameter.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            }
        ],
        "identifier": {
            "id": "ParameterTestInvalid"
        },
        "schemaIdentifier": {
            "id": "urn:hl7-org:elm",
            "version": "r1"
        },
        "usings": {
            "def": [
                {
                    "localIdentifier": "System",
                    "uri": "urn:hl7-org:elm-types:r1"
                },
                {
                    "localIdentifier": "QDM",
                    "uri": "urn:healthit-gov:qdm:v5_6"
                }
            ]
        },
        "parameters": {
            "def": [
                {
                    "name": "Test Parameter",
                    "accessLevel": "Public",
                    "parameterTypeSpecifier": {
                        "name": "{urn:hl7-org:elm-types:r1}Integer",
                        "type": "NamedTypeSpecifier"
                    }
                }
            ]
        },
        "codeSystems": {
            "def": [
                {
                    "name": "Test Code System",
                    "id": "123",
                    "accessLevel": "Public"
                }
            ]
        },
        "valueSets": {
            "def": [
                {
                    "name": "Test Value Set",
                    "id": "123",
                    "accessLevel": "Public"
                }
            ]
        },
        "codes": {
            "def": [
                {
                    "name": "Test Code",
                    "id": "",
                    "accessLevel": "Public",
                    "codeSystem": {
                        "name": "Test Code System"
                    }
                }
            ]
        },
        "concepts": {
            "def": [
                {
                    "name": "Test Concept",
                    "accessLevel": "Public",
                    "code": [
                        {
                            "name": "Test Code"
                        }
                    ]
                }
            ]
        },
        "contexts": {
            "def": [
                {
                    "name": "Patient"
                }
            ]
        },
        "statements": {
            "def": [
                {
                    "name": "Patient",
                    "context": "Patient",
                    "expression": {
                        "type": "SingletonFrom",
                        "operand": {
                            "dataType": "{urn:healthit-gov:qdm:v5_6}Patient",
                            "templateId": "Patient",
                            "type": "Retrieve"
                        }
                    }
                },
                {
                    "name": "Test Definition",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "name": "Test Parameter",
                        "type": "ParameterRef"
                    }
                },
                {
                    "name": "Test Function",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "type": "FunctionDef",
                    "expression": {
                        "name": "value",
                        "type": "OperandRef"
                    },
                    "operand": [
                        {
                            "name": "value",
                            "operandTypeSpecifier": {
                                "name": "{urn:hl7-org:elm-types:r1}Integer",
                                "type": "NamedTypeSpecifier"
                            }
                        }
                    ]
                }
            ]
        }
    }
}