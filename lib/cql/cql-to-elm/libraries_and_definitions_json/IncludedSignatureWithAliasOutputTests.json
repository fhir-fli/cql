{
    "library": {
        "annotation": [
            {
                "translatorVersion": "2.11.0",
                "translatorOptions": "",
                "type": "CqlToElmInfo"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 3,
                "startChar": 1,
                "endLine": 3,
                "endChar": 45,
                "message": "Could not load source for library SignatureOutputTests, version null.",
                "errorType": "include",
                "errorSeverity": "error",
                "targetIncludeLibraryId": "SignatureOutputTests",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 5,
                "startChar": 32,
                "endLine": 5,
                "endChar": 53,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 6,
                "startChar": 38,
                "endLine": 6,
                "endChar": 60,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 7,
                "startChar": 42,
                "endLine": 7,
                "endChar": 66,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 8,
                "startChar": 39,
                "endLine": 8,
                "endChar": 64,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 9,
                "startChar": 43,
                "endLine": 9,
                "endChar": 72,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 10,
                "startChar": 48,
                "endLine": 10,
                "endChar": 75,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            },
            {
                "libraryId": "IncludedSignatureWithAliasOutputTests",
                "startLine": 11,
                "startChar": 48,
                "endLine": 11,
                "endChar": 80,
                "message": "Could not resolve library name Overloads.",
                "errorType": "semantic",
                "errorSeverity": "error",
                "type": "CqlToElmError"
            }
        ],
        "identifier": {
            "id": "IncludedSignatureWithAliasOutputTests"
        },
        "schemaIdentifier": {
            "id": "urn:hl7-org:elm",
            "version": "r1"
        },
        "usings": {
            "def": [
                {
                    "localIdentifier": "System",
                    "uri": "urn:hl7-org:elm-types:r1"
                }
            ]
        },
        "includes": {
            "def": [
                {
                    "localIdentifier": "Overloads",
                    "path": "SignatureOutputTests"
                }
            ]
        },
        "statements": {
            "def": [
                {
                    "name": "TestOverload",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "TestOverloadOneInt",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "TestOverloadOneDecimal",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "TestOverloadTwoInts",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "TestOverloadTwoDecimals",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "TestOverloadOneIntOneDecimal",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                },
                {
                    "name": "TestOverloadOneIntTwoDecimal",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Null"
                    }
                }
            ]
        }
    }
}