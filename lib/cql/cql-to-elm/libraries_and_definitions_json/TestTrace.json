{
    "library": {
        "annotation": [
            {
                "translatorVersion": "2.11.0",
                "translatorOptions": "",
                "type": "CqlToElmInfo"
            }
        ],
        "identifier": {
            "id": "TestTrace"
        },
        "schemaIdentifier": {
            "id": "urn:hl7-org:elm",
            "version": "r1"
        },
        "usings": {
            "def": [
                {
                    "localIdentifier": "System",
                    "uri": "urn:hl7-org:elm-types:r1"
                },
                {
                    "localIdentifier": "FHIR",
                    "uri": "http://hl7.org/fhir",
                    "version": "4.0.1"
                }
            ]
        },
        "includes": {
            "def": [
                {
                    "localIdentifier": "FHIRHelpers",
                    "path": "FHIRHelpers",
                    "version": "4.0.1"
                }
            ]
        },
        "parameters": {
            "def": [
                {
                    "name": "Patient",
                    "accessLevel": "Public",
                    "parameterTypeSpecifier": {
                        "name": "{http://hl7.org/fhir}Patient",
                        "type": "NamedTypeSpecifier"
                    }
                }
            ]
        },
        "contexts": {
            "def": [
                {
                    "name": "Patient"
                }
            ]
        },
        "statements": {
            "def": [
                {
                    "name": "Test1",
                    "context": "Patient",
                    "accessLevel": "Public",
                    "expression": {
                        "type": "Equal",
                        "operand": [
                            {
                                "type": "Count",
                                "source": {
                                    "type": "Message",
                                    "source": {
                                        "type": "Flatten",
                                        "operand": {
                                            "type": "Query",
                                            "source": [
                                                {
                                                    "alias": "$this",
                                                    "expression": {
                                                        "path": "name",
                                                        "type": "Property",
                                                        "source": {
                                                            "name": "Patient",
                                                            "type": "ParameterRef"
                                                        }
                                                    }
                                                }
                                            ],
                                            "where": {
                                                "type": "Not",
                                                "operand": {
                                                    "type": "IsNull",
                                                    "operand": {
                                                        "path": "given",
                                                        "type": "Property",
                                                        "source": {
                                                            "name": "$this",
                                                            "type": "AliasRef"
                                                        }
                                                    }
                                                }
                                            },
                                            "return": {
                                                "distinct": false,
                                                "expression": {
                                                    "path": "given",
                                                    "type": "Property",
                                                    "source": {
                                                        "name": "$this",
                                                        "type": "AliasRef"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "condition": {
                                        "valueType": "{urn:hl7-org:elm-types:r1}Boolean",
                                        "value": "true",
                                        "type": "Literal"
                                    },
                                    "code": {
                                        "valueType": "{urn:hl7-org:elm-types:r1}String",
                                        "value": "TRACE",
                                        "type": "Literal"
                                    },
                                    "severity": {
                                        "valueType": "{urn:hl7-org:elm-types:r1}String",
                                        "value": "Trace",
                                        "type": "Literal"
                                    },
                                    "message": {
                                        "valueType": "{urn:hl7-org:elm-types:r1}String",
                                        "value": "test",
                                        "type": "Literal"
                                    }
                                }
                            },
                            {
                                "valueType": "{urn:hl7-org:elm-types:r1}Integer",
                                "value": "5",
                                "type": "Literal"
                            }
                        ]
                    }
                }
            ]
        }
    }
}